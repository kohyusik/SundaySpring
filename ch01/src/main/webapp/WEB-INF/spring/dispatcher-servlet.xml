<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.jason" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 1. DefaultAnnotationHandlerMapping-->
    <!-- 2. AnnotationMethodHandlerAdapter-->
    <!-- 3. ConfigurableWebBindingInitializer-->
    <!-- 4. 메시지 컨버터-->
    <!-- 5. <spring:eval>을 위한 컨버전 서비스 노출용 인터셉터-->
    <!-- 6. validator-->
    <!-- 7. conversion-service-->
    <mvc:annotation-driven/>
    <!--<mvc:annotation-driven>-->
    <!--<mvc:message-converters>-->
    <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter"/>-->
    <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
    <!--</mvc:message-converters>-->
    <!--</mvc:annotation-driven>-->


    <!-- View Resolver 설정하기 -->
    <!--
      ViewResolver 선택하는 방법:
      1) URL의 확장자를 보고 선택하기
         예) .../list.pdf   ===> PDF를 출력하는 view resolver에 위임한다.
         예) .../list.xml   ===> XML을 출력하는 view resolver에 위임한다.
      2) 클라이언트의 HTTP 요청 헤더의 값을 보고 선택하기
         예) Accept: text/html   ===> JSP를 실행하는 view resolver에 위임한다.
         예) Accept: application/json  ===> JSON 문자열을 출력하는 view resolver에 위임한다.
         예) Accept: application/pdf  ===> PDF를 출력하는 view resolver에 위임한다.
     -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
                    <property name="prefix" value="/WEB-INF/views/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
    </bean>

    <!-- 멀티파트 데이터를 처리하는 객체 설정하기 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10000000"/>
    </bean>

</beans>